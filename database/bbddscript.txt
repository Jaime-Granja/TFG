-- Tabla Usuarios
CREATE TABLE Users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

-- Tabla Campañas
CREATE TABLE Campaigns (
    campaign_id INT PRIMARY KEY AUTO_INCREMENT,
    campaign_name VARCHAR(50) NOT NULL,
    campaign_desc TEXT NOT NULL,
    creator_id INT NOT NULL,
    invite_code VARCHAR(10) UNIQUE,
    FOREIGN KEY (creator_id) REFERENCES Users(user_id) ON DELETE CASCADE
);


-- Tabla Usuarios_Campañas

/*ON DELETE CASCADE lo pongo para mantener la integridad referencial. Si un usuario o una campaña se eliminan, las filas relacionadas en Users_Campaigns también se borran automáticamente.

Poner la clave primaria compuesta es necesario para garantizar que cada combinación de usuario y campaña sea única. Así un usuario no se puede unir varias veces a la misma.

ENUM es una lista fija de valores posibles para una columna*/

CREATE TABLE Users_Campaigns (
    user_id INT NOT NULL,
    campaign_id INT NOT NULL,
    role ENUM('Master', 'Player') NOT NULL,  
    PRIMARY KEY (user_id, campaign_id), 
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (campaign_id) REFERENCES Campaigns(campaign_id) ON DELETE CASCADE
);

-- Tabla Monstruos
CREATE TABLE Monsters (
    monster_id INT PRIMARY KEY AUTO_INCREMENT,
    monster_name VARCHAR(50) NOT NULL UNIQUE,
    monster_desc TEXT NOT NULL UNIQUE,
    monster_owner INT,
    monster_stats JSON,
    monster_abilities JSON,
    FOREIGN KEY (monster_owner) REFERENCES Users (user_id) ON DELETE CASCADE
);

-- Tabla Monstruos_Campañas
CREATE TABLE Monsters_Campaigns (
    monster_id INT NOT NULL,
    campaign_id INT NOT NULL,
    PRIMARY KEY (monster_id, campaign_id), 
    FOREIGN KEY (monster_id) REFERENCES Monsters(monster_id) ON DELETE CASCADE,
    FOREIGN KEY (campaign_id) REFERENCES Campaigns(campaign_id) ON DELETE CASCADE
);

-- Tabla Especies
CREATE TABLE Species (
    specie_id INT PRIMARY KEY AUTO_INCREMENT,
    specie_name VARCHAR(50) NOT NULL UNIQUE,
    specie_desc TEXT NOT NULL UNIQUE,
    specie_features JSON,
    specie_traits JSON
);

-- Tabla Objetos
CREATE TABLE Items (
    item_id INT PRIMARY KEY AUTO_INCREMENT,
    item_name VARCHAR(50) NOT NULL UNIQUE,
    item_desc TEXT NOT NULL UNIQUE,    item_category VARCHAR(15) NOT NULL,
    item_price VARCHAR(15),
    item_weight VARCHAR(15)   
);

-- Tabla Hechizos
CREATE TABLE Spells (
    spell_id INT PRIMARY KEY AUTO_INCREMENT,
    spell_name VARCHAR(50) NOT NULL UNIQUE,
    spell_desc TEXT NOT NULL UNIQUE,
    spell_school VARCHAR(15) NOT NULL,
    spell_level VARCHAR(15) NOT NULL,
    spell_time VARCHAR(15) NOT NULL,
    spell_duration VARCHAR(15) NOT NULL,
    spell_range VARCHAR(15) NOT NULL,
    spell_components VARCHAR(15) NOT NULL
);

-- Tabla Clases
CREATE TABLE Classes (
    class_id INT PRIMARY KEY AUTO_INCREMENT,
    class_name VARCHAR(50) NOT NULL UNIQUE,
    class_desc TEXT NOT NULL UNIQUE,
    class_level INT,
    pb INT, 
    class_features JSON,
    class_traits JSON
);


-- Tabla Subclases
CREATE TABLE Subclasses (
    subclass_id INT PRIMARY KEY AUTO_INCREMENT,
    subclass_name VARCHAR(50) NOT NULL UNIQUE,
    subclass_desc TEXT NOT NULL UNIQUE,
    subclass_features JSON,
    class_id INT,
    FOREIGN KEY (class_id) REFERENCES Classes(class_id)
);

-- Tabla Clases_Hechizos
CREATE TABLE Classes_Spells (
    class_id INT NULL,
    spell_id INT NULL,
    PRIMARY KEY (class_id, spell_id), 
    FOREIGN KEY (class_id) REFERENCES Classes(class_id) ON DELETE CASCADE,
    FOREIGN KEY (spell_id) REFERENCES Spells(spell_id) ON DELETE CASCADE
);

-- Tabla Sublases_Hechizos
CREATE TABLE Subclasses_Spells (
    subclass_id INT NOT NULL,
    spell_id INT NOT NULL,
    PRIMARY KEY (subclass_id, spell_id),
    FOREIGN KEY (subclass_id) REFERENCES Subclasses(subclass_id) ON DELETE CASCADE,
    FOREIGN KEY (spell_id) REFERENCES Spells(spell_id) ON DELETE CASCADE
);

-- Tabla Fichas de personaje
CREATE TABLE Characters (
    character_id INT PRIMARY KEY AUTO_INCREMENT,
    character_name VARCHAR(50) NOT NULL,
    character_desc TEXT NOT NULL,
    character_owner INT,
    specie INT,
    stats JSON,
    FOREIGN KEY (character_owner) REFERENCES Users (user_id) ON DELETE CASCADE,
    FOREIGN KEY (specie) REFERENCES Species (specie_id) ON DELETE CASCADE
);

-- Tabla Fichas_Objetos
CREATE TABLE Characters_Items (
    character_id INT NOT NULL,
    item_id INT NOT NULL,
    PRIMARY KEY (character_id, item_id), 
    FOREIGN KEY (character_id) REFERENCES Characters(character_id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES Items(item_id) ON DELETE CASCADE
);



